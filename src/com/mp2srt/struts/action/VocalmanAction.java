/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mp2srt.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.swing.text.TextAction;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mp2srt.hibernate.Compte;
import com.mp2srt.hibernate.CompteDAO;
import com.mp2srt.hibernate.HibernateSessionFactory;
import com.mp2srt.hibernate.Vocabulaire;
import com.mp2srt.hibernate.VocabulaireDAO;
import com.mp2srt.struts.form.VocalmanForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-02-2014
 * 
 * XDoclet definition:
 * @struts.action path="/vocalman" name="vocalmanForm" input="/addvocab.jsp" scope="request" validate="true"
 * @struts.action-forward name="doneedit" path="/editvocab.jsp" redirect="true"
 * @struts.action-forward name="doneadd" path="/addvocab.jsp" redirect="true"
 */
public class VocalmanAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		VocalmanForm vocalmanForm = (VocalmanForm) form;// TODO Auto-generated method stub
		
		String output ="doneedit";
		String index = vocalmanForm.getIndex();
		String user = vocalmanForm.getUser();
		String vocab = vocalmanForm.getVocab();
		String man = vocalmanForm.getMan();
		
		Logger log = Logger.getLogger(TextAction.class);
		VocabulaireDAO vocdao = new VocabulaireDAO();
		Vocabulaire voc = new Vocabulaire();
		CompteDAO codao = new CompteDAO();
		Compte comp = codao.findById(user);
		long id;
		
		if (man.contains("Add")){
			voc.setCompte(comp);
			voc.setNomVocab(vocab);
			
			Session hsf = HibernateSessionFactory.getSession();
			Transaction trans = hsf.beginTransaction();
			hsf.saveOrUpdate(voc); 
			trans.commit();
			hsf.close();
			
			request.getSession().setAttribute("info", "The vocabulary has been added.");
			log.info("The vocabulary with the id " + voc.getIdVocab() + " has been added.");
			output ="doneadd";
		}
		else if (man.contains("Save")){
			id = Long.parseLong(index);
			voc = vocdao.findById(id);
			voc.setIdVocab(id);
			voc.setCompte(comp);
			voc.setNomVocab(vocab);
			
			Session hsf = HibernateSessionFactory.getSession();
			Transaction trans = hsf.beginTransaction();
			hsf.saveOrUpdate(voc); 
			trans.commit();
			hsf.close();
			
			request.getSession().setAttribute("info", "The vocabulary has been modified.");
			log.info("The vocabulary with the id " + voc.getIdVocab() + " has been modified.");
			output ="doneedit";
		}
		
		
		return mapping.findForward(output);
	}
}