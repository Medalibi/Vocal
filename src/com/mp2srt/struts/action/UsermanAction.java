/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mp2srt.struts.action;

import javax.persistence.criteria.CriteriaBuilder.Case;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.swing.text.TextAction;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mp2srt.hibernate.Compte;
import com.mp2srt.hibernate.CompteDAO;
import com.mp2srt.hibernate.HibernateSessionFactory;
import com.mp2srt.hibernate.Privilege;
import com.mp2srt.hibernate.PrivilegeDAO;
import com.mp2srt.hibernate.Vocabulaire;
import com.mp2srt.hibernate.VocabulaireDAO;
import com.mp2srt.struts.form.UsermanForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-02-2014
 * 
 * XDoclet definition:
 * @struts.action path="/userman" name="usermanForm" input="/adduser.jsp" scope="request" validate="true"
 * @struts.action-forward name="doneedit" path="/edituser.jsp" redirect="true"
 * @struts.action-forward name="doneadd" path="/adduser.jsp" redirect="true"
 */
public class UsermanAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UsermanForm usermanForm = (UsermanForm) form;// TODO Auto-generated method stub
		
		String output ="doneedit";
		
		String login = usermanForm.getLogin();
		String password = usermanForm.getPassword();
		String name = usermanForm.getName();
		String surname = usermanForm.getSurname();
		String title = usermanForm.getTitle();
		String address = usermanForm.getAddress();
		String mailpass = usermanForm.getMailpass();
		String right = usermanForm.getRight();
		String man = usermanForm.getMan();
		
		Logger log = Logger.getLogger(TextAction.class);
		PrivilegeDAO pridao = new PrivilegeDAO();
		Privilege pri = new Privilege();
		CompteDAO codao = new CompteDAO();
		Compte comp = codao.findById(login);
		
		
		if (right.equals("super"))
			pri= pridao.findById((long) 3);
		else if (right.equals("admin"))
			pri= pridao.findById((long) 2);
		else
			pri= pridao.findById((long) 2);
		
		
		if (man.contains("Add")){
			comp.setPrivilege(pri);
			comp.setLogin(login);
			comp.setPassword(password);
			comp.setNom(surname);
			comp.setPrenom(name);
			comp.setTitre(title);
			comp.setAdresseMail(address);
			comp.setMailpassword(mailpass);
			
			
			Session hsf = HibernateSessionFactory.getSession();
			Transaction trans = hsf.beginTransaction();
			hsf.saveOrUpdate(comp); 
			trans.commit();
			hsf.close();
			
			request.getSession().setAttribute("info", "User has been added.");
			log.info("User " + comp.getLogin() + " has been added.");
			output ="doneadd";
		}
		else if (man.contains("Save")){
			comp = codao.findById(login);
			comp.setPrivilege(pri);
			comp.setPassword(password);
			comp.setNom(surname);
			comp.setPrenom(name);
			comp.setTitre(title);
			comp.setAdresseMail(address);
			comp.setMailpassword(mailpass);
			
			Session hsf = HibernateSessionFactory.getSession();
			Transaction trans = hsf.beginTransaction();
			hsf.saveOrUpdate(comp); 
			trans.commit();
			hsf.close();
			
			request.getSession().setAttribute("info", "User has been modified.");
			log.info("User " + comp.getLogin() + " has been modified.");
			output ="doneedit";
		}
		
		
		return mapping.findForward(output);
	}
}